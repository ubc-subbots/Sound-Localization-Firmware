|top
DB[0] <> driver:driver_inst.DB
DB[1] <> driver:driver_inst.DB
DB[2] <> driver:driver_inst.DB
DB[3] <> driver:driver_inst.DB
DB[4] <> driver:driver_inst.DB
DB[5] <> driver:driver_inst.DB
DB[6] <> driver:driver_inst.DB
DB[7] <> driver:driver_inst.DB
DB[8] <> driver:driver_inst.DB
DB[9] <> driver:driver_inst.DB
DB[10] <> driver:driver_inst.DB
DB[11] <> driver:driver_inst.DB
DB[12] <> driver:driver_inst.DB
DB[13] <> driver:driver_inst.DB
DB[14] <> driver:driver_inst.DB
DB[15] <> driver:driver_inst.DB
Busy => Busy.IN1
CLOCK_27M => CLOCK_27M.IN1
rst => rst.IN3
KEY2 => ADCrst.DATAIN
sclk => sclk.IN1
SPI_cs => SPI_cs.IN1
transaction_done => Selector3.IN7
transaction_done => Selector0.IN2
convst_A <= driver:driver_inst.convst_A
convst_B <= driver:driver_inst.convst_B
convst_C <= driver:driver_inst.convst_C
convst_D <= driver:driver_inst.convst_D
RD_N <= driver:driver_inst.RD_N
ADC_CS_N <= driver:driver_inst.CS_N
HW_N <= driver:driver_inst.HW_N
PAR_N <= driver:driver_inst.PAR_N
ADCrst <= KEY2.DB_MAX_OUTPUT_PORT_TYPE
STBY_N <= driver:driver_inst.STBY_N
WR_N <= driver:driver_inst.WR_N
XCLK <= <VCC>
processed_MISO <= spi:spi_inst.processed_MISO
SPI_RDY <= state[2].DB_MAX_OUTPUT_PORT_TYPE


|top|Clk_divider:Clk_divider_inst
clk_in => clk_out~reg0.CLK
clk_in => counter[0].CLK
clk_in => counter[1].CLK
clk_in => counter[2].CLK
clk_in => counter[3].CLK
clk_in => counter[4].CLK
clk_in => counter[5].CLK
clk_in => counter[6].CLK
clk_in => counter[7].CLK
clk_in => counter[8].CLK
clk_in => counter[9].CLK
clk_in => counter[10].CLK
clk_in => counter[11].CLK
clk_in => counter[12].CLK
clk_in => counter[13].CLK
clk_in => counter[14].CLK
clk_in => counter[15].CLK
clk_in => counter[16].CLK
clk_in => counter[17].CLK
clk_in => counter[18].CLK
clk_in => counter[19].CLK
clk_in => counter[20].CLK
clk_in => counter[21].CLK
clk_in => counter[22].CLK
clk_in => counter[23].CLK
clk_in => counter[24].CLK
clk_in => counter[25].CLK
clk_in => counter[26].CLK
clk_in => counter[27].CLK
clk_in => counter[28].CLK
clk_in => counter[29].CLK
clk_in => counter[30].CLK
clk_in => counter[31].CLK
divisor[0] => Add1.IN64
divisor[1] => Add1.IN63
divisor[1] => LessThan1.IN32
divisor[2] => Add1.IN62
divisor[2] => LessThan1.IN31
divisor[3] => Add1.IN61
divisor[3] => LessThan1.IN30
divisor[4] => Add1.IN60
divisor[4] => LessThan1.IN29
divisor[5] => Add1.IN59
divisor[5] => LessThan1.IN28
divisor[6] => Add1.IN58
divisor[6] => LessThan1.IN27
divisor[7] => Add1.IN57
divisor[7] => LessThan1.IN26
divisor[8] => Add1.IN56
divisor[8] => LessThan1.IN25
divisor[9] => Add1.IN55
divisor[9] => LessThan1.IN24
divisor[10] => Add1.IN54
divisor[10] => LessThan1.IN23
divisor[11] => Add1.IN53
divisor[11] => LessThan1.IN22
divisor[12] => Add1.IN52
divisor[12] => LessThan1.IN21
divisor[13] => Add1.IN51
divisor[13] => LessThan1.IN20
divisor[14] => Add1.IN50
divisor[14] => LessThan1.IN19
divisor[15] => Add1.IN49
divisor[15] => LessThan1.IN18
divisor[16] => Add1.IN48
divisor[16] => LessThan1.IN17
divisor[17] => Add1.IN47
divisor[17] => LessThan1.IN16
divisor[18] => Add1.IN46
divisor[18] => LessThan1.IN15
divisor[19] => Add1.IN45
divisor[19] => LessThan1.IN14
divisor[20] => Add1.IN44
divisor[20] => LessThan1.IN13
divisor[21] => Add1.IN43
divisor[21] => LessThan1.IN12
divisor[22] => Add1.IN42
divisor[22] => LessThan1.IN11
divisor[23] => Add1.IN41
divisor[23] => LessThan1.IN10
divisor[24] => Add1.IN40
divisor[24] => LessThan1.IN9
divisor[25] => Add1.IN39
divisor[25] => LessThan1.IN8
divisor[26] => Add1.IN38
divisor[26] => LessThan1.IN7
divisor[27] => Add1.IN37
divisor[27] => LessThan1.IN6
divisor[28] => Add1.IN36
divisor[28] => LessThan1.IN5
divisor[29] => Add1.IN35
divisor[29] => LessThan1.IN4
divisor[30] => Add1.IN34
divisor[30] => LessThan1.IN3
divisor[31] => Add1.IN33
divisor[31] => LessThan1.IN2
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => counter.OUTPUTSELECT
switch => clk_out.OUTPUTSELECT
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|driver:driver_inst
convst_A <= convst_A~reg0.DB_MAX_OUTPUT_PORT_TYPE
convst_B <= convst_B~reg0.DB_MAX_OUTPUT_PORT_TYPE
convst_C <= convst_C~reg0.DB_MAX_OUTPUT_PORT_TYPE
convst_D <= convst_D~reg0.DB_MAX_OUTPUT_PORT_TYPE
RD_N <= RD_N~reg0.DB_MAX_OUTPUT_PORT_TYPE
CS_N <= CS_N~reg0.DB_MAX_OUTPUT_PORT_TYPE
HW_N <= <VCC>
PAR_N <= <GND>
ADCrst <= <GND>
STBY_N <= <VCC>
WR_N <= WR_N~reg0.DB_MAX_OUTPUT_PORT_TYPE
toMem[0] <= toMem[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
toMem[1] <= toMem[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
toMem[2] <= toMem[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
toMem[3] <= toMem[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
toMem[4] <= toMem[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
toMem[5] <= toMem[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
toMem[6] <= toMem[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
toMem[7] <= toMem[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
toMem[8] <= toMem[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
toMem[9] <= toMem[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
toMem[10] <= toMem[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
toMem[11] <= toMem[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
toMem[12] <= toMem[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
toMem[13] <= toMem[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
toMem[14] <= toMem[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
toMem[15] <= toMem[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_ready <= mem_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
state_ff[0] <= state_ff[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state_ff[1] <= state_ff[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state_ff[2] <= state_ff[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state_ff[3] <= state_ff[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state_ff[4] <= state_ff[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rst => CS_N.OUTPUTSELECT
rst => state_ff.OUTPUTSELECT
rst => state_ff.OUTPUTSELECT
rst => state_ff.OUTPUTSELECT
rst => ADCread.OUTPUTSELECT
rst => ADCread.OUTPUTSELECT
rst => ADCread.OUTPUTSELECT
rst => ADCread.OUTPUTSELECT
rst => convstsent.OUTPUTSELECT
rst => RD_N.OUTPUTSELECT
rst => mem_ready.OUTPUTSELECT
rst => WR_N.OUTPUTSELECT
rst => finishwrite.OUTPUTSELECT
rst => writecount.OUTPUTSELECT
rst => writecount.OUTPUTSELECT
rst => writecount.OUTPUTSELECT
rst => writecount.OUTPUTSELECT
rst => writecount.OUTPUTSELECT
rst => writecount.OUTPUTSELECT
rst => writecount.OUTPUTSELECT
rst => memreg[6].ENA
rst => memreg[5].ENA
rst => memreg[4].ENA
rst => memreg[3].ENA
rst => memreg[2].ENA
rst => memreg[1].ENA
rst => memreg[0].ENA
rst => convst_A~reg0.ENA
rst => convst_B~reg0.ENA
rst => convst_C~reg0.ENA
rst => convst_D~reg0.ENA
rst => DBout[0].ENA
rst => memreg[7].ENA
rst => memreg[8].ENA
rst => memreg[9].ENA
rst => memreg[10].ENA
rst => memreg[11].ENA
rst => memreg[12].ENA
rst => memreg[13].ENA
rst => memreg[14].ENA
rst => memreg[15].ENA
rst => toMem[0]~reg0.ENA
rst => toMem[1]~reg0.ENA
rst => toMem[2]~reg0.ENA
rst => toMem[3]~reg0.ENA
rst => toMem[4]~reg0.ENA
rst => toMem[5]~reg0.ENA
rst => toMem[6]~reg0.ENA
rst => toMem[7]~reg0.ENA
rst => toMem[8]~reg0.ENA
rst => toMem[9]~reg0.ENA
rst => toMem[10]~reg0.ENA
rst => toMem[11]~reg0.ENA
rst => toMem[12]~reg0.ENA
rst => toMem[13]~reg0.ENA
rst => toMem[14]~reg0.ENA
rst => toMem[15]~reg0.ENA
rst => DBout[1].ENA
rst => DBout[2].ENA
rst => DBout[3].ENA
rst => DBout[4].ENA
rst => DBout[5].ENA
rst => DBout[6].ENA
rst => DBout[7].ENA
rst => DBout[8].ENA
rst => DBout[9].ENA
rst => DBout[10].ENA
rst => DBout[11].ENA
rst => DBout[12].ENA
rst => DBout[13].ENA
rst => DBout[14].ENA
rst => DBout[15].ENA
Busy => always2.IN1
DB[0] <> DB[0]
DB[1] <> DB[1]
DB[2] <> DB[2]
DB[3] <> DB[3]
DB[4] <> DB[4]
DB[5] <> DB[5]
DB[6] <> DB[6]
DB[7] <> DB[7]
DB[8] <> DB[8]
DB[9] <> DB[9]
DB[10] <> DB[10]
DB[11] <> DB[11]
DB[12] <> DB[12]
DB[13] <> DB[13]
DB[14] <> DB[14]
DB[15] <> DB[15]
clk => convst_D~reg0.CLK
clk => convst_C~reg0.CLK
clk => convst_B~reg0.CLK
clk => convst_A~reg0.CLK
clk => memreg[0].CLK
clk => memreg[1].CLK
clk => memreg[2].CLK
clk => memreg[3].CLK
clk => memreg[4].CLK
clk => memreg[5].CLK
clk => memreg[6].CLK
clk => memreg[7].CLK
clk => memreg[8].CLK
clk => memreg[9].CLK
clk => memreg[10].CLK
clk => memreg[11].CLK
clk => memreg[12].CLK
clk => memreg[13].CLK
clk => memreg[14].CLK
clk => memreg[15].CLK
clk => toMem[0]~reg0.CLK
clk => toMem[1]~reg0.CLK
clk => toMem[2]~reg0.CLK
clk => toMem[3]~reg0.CLK
clk => toMem[4]~reg0.CLK
clk => toMem[5]~reg0.CLK
clk => toMem[6]~reg0.CLK
clk => toMem[7]~reg0.CLK
clk => toMem[8]~reg0.CLK
clk => toMem[9]~reg0.CLK
clk => toMem[10]~reg0.CLK
clk => toMem[11]~reg0.CLK
clk => toMem[12]~reg0.CLK
clk => toMem[13]~reg0.CLK
clk => toMem[14]~reg0.CLK
clk => toMem[15]~reg0.CLK
clk => mem_ready~reg0.CLK
clk => RD_N~reg0.CLK
clk => convstsent.CLK
clk => ADCread[0].CLK
clk => ADCread[1].CLK
clk => ADCread[2].CLK
clk => ADCread[3].CLK
clk => state_ff[0]~reg0.CLK
clk => state_ff[1]~reg0.CLK
clk => state_ff[2]~reg0.CLK
clk => state_ff[3]~reg0.CLK
clk => state_ff[4]~reg0.CLK
clk => DBout[0].CLK
clk => DBout[1].CLK
clk => DBout[2].CLK
clk => DBout[3].CLK
clk => DBout[4].CLK
clk => DBout[5].CLK
clk => DBout[6].CLK
clk => DBout[7].CLK
clk => DBout[8].CLK
clk => DBout[9].CLK
clk => DBout[10].CLK
clk => DBout[11].CLK
clk => DBout[12].CLK
clk => DBout[13].CLK
clk => DBout[14].CLK
clk => DBout[15].CLK
clk => writecount[0].CLK
clk => writecount[1].CLK
clk => writecount[2].CLK
clk => writecount[3].CLK
clk => writecount[4].CLK
clk => writecount[5].CLK
clk => writecount[6].CLK
clk => finishwrite.CLK
clk => WR_N~reg0.CLK
clk => CS_N~reg0.CLK


|top|ADCmemory:ADCmemory_inst
clk => storage.we_a.CLK
clk => storage.waddr_a[13].CLK
clk => storage.waddr_a[12].CLK
clk => storage.waddr_a[11].CLK
clk => storage.waddr_a[10].CLK
clk => storage.waddr_a[9].CLK
clk => storage.waddr_a[8].CLK
clk => storage.waddr_a[7].CLK
clk => storage.waddr_a[6].CLK
clk => storage.waddr_a[5].CLK
clk => storage.waddr_a[4].CLK
clk => storage.waddr_a[3].CLK
clk => storage.waddr_a[2].CLK
clk => storage.waddr_a[1].CLK
clk => storage.waddr_a[0].CLK
clk => storage.data_a[15].CLK
clk => storage.data_a[14].CLK
clk => storage.data_a[13].CLK
clk => storage.data_a[12].CLK
clk => storage.data_a[11].CLK
clk => storage.data_a[10].CLK
clk => storage.data_a[9].CLK
clk => storage.data_a[8].CLK
clk => storage.data_a[7].CLK
clk => storage.data_a[6].CLK
clk => storage.data_a[5].CLK
clk => storage.data_a[4].CLK
clk => storage.data_a[3].CLK
clk => storage.data_a[2].CLK
clk => storage.data_a[1].CLK
clk => storage.data_a[0].CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => data_out[8]~reg0.CLK
clk => data_out[9]~reg0.CLK
clk => data_out[10]~reg0.CLK
clk => data_out[11]~reg0.CLK
clk => data_out[12]~reg0.CLK
clk => data_out[13]~reg0.CLK
clk => data_out[14]~reg0.CLK
clk => data_out[15]~reg0.CLK
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
clk => count[8]~reg0.CLK
clk => count[9]~reg0.CLK
clk => count[10]~reg0.CLK
clk => count[11]~reg0.CLK
clk => count[12]~reg0.CLK
clk => count[13]~reg0.CLK
clk => read_ptr[0].CLK
clk => read_ptr[1].CLK
clk => read_ptr[2].CLK
clk => read_ptr[3].CLK
clk => read_ptr[4].CLK
clk => read_ptr[5].CLK
clk => read_ptr[6].CLK
clk => read_ptr[7].CLK
clk => read_ptr[8].CLK
clk => read_ptr[9].CLK
clk => read_ptr[10].CLK
clk => read_ptr[11].CLK
clk => read_ptr[12].CLK
clk => read_ptr[13].CLK
clk => write_ptr[0].CLK
clk => write_ptr[1].CLK
clk => write_ptr[2].CLK
clk => write_ptr[3].CLK
clk => write_ptr[4].CLK
clk => write_ptr[5].CLK
clk => write_ptr[6].CLK
clk => write_ptr[7].CLK
clk => write_ptr[8].CLK
clk => write_ptr[9].CLK
clk => write_ptr[10].CLK
clk => write_ptr[11].CLK
clk => write_ptr[12].CLK
clk => write_ptr[13].CLK
clk => storage.CLK0
rst => write_ptr.OUTPUTSELECT
rst => write_ptr.OUTPUTSELECT
rst => write_ptr.OUTPUTSELECT
rst => write_ptr.OUTPUTSELECT
rst => write_ptr.OUTPUTSELECT
rst => write_ptr.OUTPUTSELECT
rst => write_ptr.OUTPUTSELECT
rst => write_ptr.OUTPUTSELECT
rst => write_ptr.OUTPUTSELECT
rst => write_ptr.OUTPUTSELECT
rst => write_ptr.OUTPUTSELECT
rst => write_ptr.OUTPUTSELECT
rst => write_ptr.OUTPUTSELECT
rst => write_ptr.OUTPUTSELECT
rst => read_ptr.OUTPUTSELECT
rst => read_ptr.OUTPUTSELECT
rst => read_ptr.OUTPUTSELECT
rst => read_ptr.OUTPUTSELECT
rst => read_ptr.OUTPUTSELECT
rst => read_ptr.OUTPUTSELECT
rst => read_ptr.OUTPUTSELECT
rst => read_ptr.OUTPUTSELECT
rst => read_ptr.OUTPUTSELECT
rst => read_ptr.OUTPUTSELECT
rst => read_ptr.OUTPUTSELECT
rst => read_ptr.OUTPUTSELECT
rst => read_ptr.OUTPUTSELECT
rst => read_ptr.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => storage.OUTPUTSELECT
rst => data_out[2]~reg0.ENA
rst => data_out[1]~reg0.ENA
rst => data_out[0]~reg0.ENA
rst => data_out[3]~reg0.ENA
rst => data_out[4]~reg0.ENA
rst => data_out[5]~reg0.ENA
rst => data_out[6]~reg0.ENA
rst => data_out[7]~reg0.ENA
rst => data_out[8]~reg0.ENA
rst => data_out[9]~reg0.ENA
rst => data_out[10]~reg0.ENA
rst => data_out[11]~reg0.ENA
rst => data_out[12]~reg0.ENA
rst => data_out[13]~reg0.ENA
rst => data_out[14]~reg0.ENA
rst => data_out[15]~reg0.ENA
write => write_ptr.OUTPUTSELECT
write => write_ptr.OUTPUTSELECT
write => write_ptr.OUTPUTSELECT
write => write_ptr.OUTPUTSELECT
write => write_ptr.OUTPUTSELECT
write => write_ptr.OUTPUTSELECT
write => write_ptr.OUTPUTSELECT
write => write_ptr.OUTPUTSELECT
write => write_ptr.OUTPUTSELECT
write => write_ptr.OUTPUTSELECT
write => write_ptr.OUTPUTSELECT
write => write_ptr.OUTPUTSELECT
write => write_ptr.OUTPUTSELECT
write => write_ptr.OUTPUTSELECT
write => count.OUTPUTSELECT
write => count.OUTPUTSELECT
write => count.OUTPUTSELECT
write => count.OUTPUTSELECT
write => count.OUTPUTSELECT
write => count.OUTPUTSELECT
write => count.OUTPUTSELECT
write => count.OUTPUTSELECT
write => count.OUTPUTSELECT
write => count.OUTPUTSELECT
write => count.OUTPUTSELECT
write => count.OUTPUTSELECT
write => count.OUTPUTSELECT
write => count.OUTPUTSELECT
write => storage.DATAA
read => always0.IN1
data_in[0] => storage.data_a[0].DATAIN
data_in[0] => storage.DATAIN
data_in[1] => storage.data_a[1].DATAIN
data_in[1] => storage.DATAIN1
data_in[2] => storage.data_a[2].DATAIN
data_in[2] => storage.DATAIN2
data_in[3] => storage.data_a[3].DATAIN
data_in[3] => storage.DATAIN3
data_in[4] => storage.data_a[4].DATAIN
data_in[4] => storage.DATAIN4
data_in[5] => storage.data_a[5].DATAIN
data_in[5] => storage.DATAIN5
data_in[6] => storage.data_a[6].DATAIN
data_in[6] => storage.DATAIN6
data_in[7] => storage.data_a[7].DATAIN
data_in[7] => storage.DATAIN7
data_in[8] => storage.data_a[8].DATAIN
data_in[8] => storage.DATAIN8
data_in[9] => storage.data_a[9].DATAIN
data_in[9] => storage.DATAIN9
data_in[10] => storage.data_a[10].DATAIN
data_in[10] => storage.DATAIN10
data_in[11] => storage.data_a[11].DATAIN
data_in[11] => storage.DATAIN11
data_in[12] => storage.data_a[12].DATAIN
data_in[12] => storage.DATAIN12
data_in[13] => storage.data_a[13].DATAIN
data_in[13] => storage.DATAIN13
data_in[14] => storage.data_a[14].DATAIN
data_in[14] => storage.DATAIN14
data_in[15] => storage.data_a[15].DATAIN
data_in[15] => storage.DATAIN15
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[8] <= count[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[9] <= count[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[10] <= count[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[11] <= count[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[12] <= count[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[13] <= count[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= data_out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= data_out[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= data_out[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= data_out[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[12] <= data_out[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[13] <= data_out[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[14] <= data_out[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[15] <= data_out[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
full <= <GND>
empty <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|top|spi:spi_inst
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => notfinished.OUTPUTSELECT
rst => MISO_counter[0].ENA
rst => MISO_counter[3].ENA
rst => MISO_counter[2].ENA
rst => MISO_counter[1].ENA
rst => processed_MISO~reg0.ENA
rst => ready_for_data~reg0.ENA
rst => processed_MISO~en.ENA
sclk => notfinished.CLK
sclk => state[0].CLK
sclk => state[1].CLK
sclk => state[2].CLK
sclk => state[3].CLK
sclk => state[4].CLK
sclk => state[5].CLK
sclk => state[6].CLK
sclk => state[7].CLK
sclk => state[8].CLK
sclk => state[9].CLK
sclk => state[10].CLK
sclk => state[11].CLK
sclk => state[12].CLK
sclk => state[13].CLK
sclk => state[14].CLK
sclk => state[15].CLK
sclk => state[16].CLK
sclk => state[17].CLK
sclk => state[18].CLK
sclk => state[19].CLK
sclk => state[20].CLK
sclk => state[21].CLK
sclk => state[22].CLK
sclk => state[23].CLK
sclk => state[24].CLK
sclk => state[25].CLK
sclk => state[26].CLK
sclk => state[27].CLK
sclk => state[28].CLK
sclk => state[29].CLK
sclk => state[30].CLK
sclk => state[31].CLK
sclk => ready_for_data~reg0.CLK
sclk => processed_MISO~reg0.CLK
sclk => processed_MISO~en.CLK
sclk => MISO_counter[0].CLK
sclk => MISO_counter[1].CLK
sclk => MISO_counter[2].CLK
sclk => MISO_counter[3].CLK
cs => state[0].ACLR
cs => state[1].ACLR
cs => state[2].ACLR
cs => state[3].ACLR
cs => state[4].ACLR
cs => state[5].ACLR
cs => state[6].ACLR
cs => state[7].ACLR
cs => state[8].ACLR
cs => state[9].ACLR
cs => state[10].ACLR
cs => state[11].ACLR
cs => state[12].ACLR
cs => state[13].ACLR
cs => state[14].ACLR
cs => state[15].ACLR
cs => state[16].ACLR
cs => state[17].ACLR
cs => state[18].ACLR
cs => state[19].ACLR
cs => state[20].ACLR
cs => state[21].ACLR
cs => state[22].ACLR
cs => state[23].ACLR
cs => state[24].ACLR
cs => state[25].ACLR
cs => state[26].ACLR
cs => state[27].ACLR
cs => state[28].ACLR
cs => state[29].ACLR
cs => state[30].ACLR
cs => state[31].ACLR
cs => ready_for_data~reg0.ACLR
cs => processed_MISO~reg0.ALOAD
cs => MISO_counter[0].ACLR
cs => MISO_counter[1].PRESET
cs => MISO_counter[2].PRESET
cs => MISO_counter[3].PRESET
cs => notfinished.ENA
unprocessed_MISO[0] => Mux0.IN15
unprocessed_MISO[0] => processed_MISO.DATAA
unprocessed_MISO[1] => Mux0.IN14
unprocessed_MISO[2] => Mux0.IN13
unprocessed_MISO[3] => Mux0.IN12
unprocessed_MISO[4] => Mux0.IN11
unprocessed_MISO[5] => Mux0.IN10
unprocessed_MISO[6] => Mux0.IN9
unprocessed_MISO[7] => Mux0.IN8
unprocessed_MISO[8] => Mux0.IN7
unprocessed_MISO[9] => Mux0.IN6
unprocessed_MISO[10] => Mux0.IN5
unprocessed_MISO[11] => Mux0.IN4
unprocessed_MISO[12] => Mux0.IN3
unprocessed_MISO[13] => Mux0.IN2
unprocessed_MISO[14] => Mux0.IN1
unprocessed_MISO[15] => Mux0.IN0
unprocessed_MISO[15] => processed_MISO~reg0.ADATA
unprocessed_MISO[15] => processed_MISO.DATAB
processed_MISO <= processed_MISO.DB_MAX_OUTPUT_PORT_TYPE
ready_for_data <= ready_for_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


